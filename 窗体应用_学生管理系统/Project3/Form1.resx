<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADgAAAAxCAYAAACPiWrWAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABKZJREFUaEPtmktvU0cYhvkJ/AT4BdxUKItKFZcNbNh0UakqpZTCBkSkrmCDIhZI
        SC1qq9ISQQohaTDmFhLSXEyAyMESVCVQkNqisAgCJBDEuTiJDfnKO/hzZsafj8+cS2ykvtIjRXPmcp7M
        OTPjxIsWdeWpHtn74DUtuVoQrzkhFtaY5tE3xBl4MUdfDL8W6/lCLKwhupyeV3mi70beuM+qWFgjdLmT
        3ySpYVkjJRo76cXoy2LpuzjNqlhYA2y5XUv3GXz7aRMNJf8o1ngXX7MqFi4w1eR0vGZV6rvmgi5yNvas
        Sv3XVDCMnA5H9ds5a2IPWomPMwXacjvEcm0RlRzgqL5dBRf3mjeDn6V6LkQpBzjSWJ6CmDGsVHbwQkNc
        alONqOUARxpPFMSyCwnO35kR2v/RYTq4+QfKZadV2aPcHC0fdNt045ADHGlMUZBnDTL2jWCZHr3/RF1H
        Pb/vZVxygCONKwpyICN1iHJ9eT7wj/d7Gacc4EhjewpKnelgw+VAQnov45YDHHtshVTIkTqzOfr16dJ7
        +Wd2zjg2hZFzqc/RHUpIhRypMwksPvp7icUnjBw//tI1CY7kEokgwHuJ1daOixxWav5FIVIdCY7k4iTo
        52ZTJ9LF1m5yOFfyo86R6klwJBcnQcTPTaOOi1znkZTq245UV4IjuTgLIpgl+1oQ8Fjf6b1f7LU8UhsJ
        juQSSBDBQmBfd0FfmCpFaifBkVwCCyJYVCodBrzA42u/b1KkthIcyeWtII5a5nGLU6kjPZgFF0l9EaoW
        qb0ER3co8b+g0BEH72GQR1Q//XhFaivB0R1KBBV8jxYZd0HsW/a1ICzQNuEmGMdGr38q0SPVleDoDiVc
        BP3cdB0e1fwLelHpcXORjOmwHV6wzj8uhRPUH606/cAbXPA9+ZNFZUGvTZwfI6TO/+hkCvYN3aJMJkM3
        h4YonU7T4OAg3bh+g65fu0YDAwOUSqWov6+f+np7qef3HrrU0z/fmQdxSnKkccsEIVcoFHxzpatrvrMq
        xCXJkcYsE8TM4canp6fpr4fPaGNDgtbuai0jl8upep2XL8935oM4JDnSeGWCeCxZENx7+JQ27G2nD3ee
        MoBgPp+njo6O+c58ErUkRxrrraBZgHfOFly/p5XW7PjVYGpqSglevHDRaO+XKCU50jhlglhQWPDev09o
        3e4WWv3VcZPtx2lycpJmZ2fpwvnzRnsXopLkSGOUCWK1ZMEdhzrog+1N5XzZRBMTE0rwXDJptHcljGSg
        f2FjK4Dg85dZWrXtlyI/K5Kpuwr8PD4+TjMzM5RMJIz2QXCRxN4c6ksI2OcgOPL4Oa3cerREMjWsHkvM
        XKLvDmWzWSWYaD9jtA9KNUl7thCce52/RoJNnB/RTQ0nacXnP9In+9pKcpg5yI2NjSnB9rbfjPZhsCW9
        ZivwF4FwQoEgbj49PELLP/uetjWeVaumLgnwS2hrbTXah0WX1ONrtiTsAhy/IAiwDdy8+4j2/9StFhRI
        M5ADp1tajPZRoEs6zZaEXdDd3a2OXzihYBPHPoetAKslFhS8c3gsMXOQO9Z8ymgfFQv3dUr7eyc6Uv26
        Ik//Af4F63EaMjPTAAAAAElFTkSuQmCC
</value>
  </data>
</root>